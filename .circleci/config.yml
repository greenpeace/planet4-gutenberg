---
version: 2.1

parameters:
  rollback:
    type: boolean
    default: false

docker_auth: &docker_auth
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:latest
      auth:
        <<: *docker_auth

orbs:
  slack: circleci/slack@3.4.2
job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: gutenberg
    CONTAINER_PREFIX: planet4-gutenberg
    WP_DB_NAME_PREFIX: planet4-gutenber_wordpress
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: www-dev.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: gutenberg
    HELM_RELEASE: planet4-gutenberg
    WP_DB_NAME: planet4-gutenber_wordpress_develop
    WP_STATELESS_BUCKET: planet4-gutenberg-stateless-develop


commands:
  approve_job:
    description: "Approve an on-hold job."
    parameters:
      job_name:
        type: string
    steps:
      - run:
          name: Unhold job "<< parameters.job_name >>"
          command: |
            if [ -f /tmp/workspace/approve_workflow ]; then
              WORKFLOW_ID=$(cat /tmp/workspace/approve_workflow)
              url="https://circleci.com/api/v2/workflow/$WORKFLOW_ID/job"

              # Get workflow details
              workflow=$(curl -s -u "${CIRCLE_TOKEN}": -X GET --header "Content-Type: application/json" "$url")
              echo $workflow
              # Get approval job id
              job_id=$(echo "$workflow" | jq -r '.items[] | select(.name=="<< parameters.job_name >>") | .approval_request_id ')
              echo $job_id

              if [[ -z $job_id ]]; then
                echo "Approval ID not found"
                exit 1
              fi

              echo "Approving << parameters.job_name >> for workflow $url"
              echo "Job ID: ${job_id}"
              curl \
                --header "Content-Type: application/json" \
                -u "${CIRCLE_TOKEN}:" \
                -X POST \
                "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/approve/${job_id}"
            fi

job_definitions:
  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make test
      - run: make rewrite
      - run: make checkout
      - run: make rewrite-app-repos
      - run: make copy
      - run: make bake
      - run: make persist
      - run: make build
      - run: make push
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  deploy_steps: &deploy_steps
    working_directory: ~/
    parameters:
      notify:
        type: boolean
        default: false
      is_prod:
        type: boolean
        default: false
    steps:
      - checkout:
          path: /home/circleci/checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: make prepare-helm
      - run: make backup
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make deploy-helm
      - run: make post-deploy
      - run:
          name: Extract workflow from commit message
          command: |
            UNHOLD_WORKFLOW_LINE=$(git --git-dir=/home/circleci/checkout/.git log --format=%B -n 1 "$CIRCLE_SHA1" | { grep '^\/unhold ' || true; } )
            echo "line $UNHOLD_WORKFLOW_LINE"
            if [[ -n $UNHOLD_WORKFLOW_LINE ]]; then
              WORKFLOW_ID=${UNHOLD_WORKFLOW_LINE#"/unhold "}
              echo "$WORKFLOW_ID"
              echo $WORKFLOW_ID > /tmp/workspace/approve_workflow
            fi
      - approve_job:
          job_name: instance-ready
      - when:
          condition: << parameters.is_prod >>
          steps:
            - run: echo $CIRCLE_WORKFLOW_ID > /tmp/workspace/approve_workflow
            - approve_job:
                job_name: rollback-staging
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-activity-ci
            - slack/status:
                channel: C015MQGG3KQ
                webhook: ${SLACK_NRO_WEBHOOK}

jobs:
  build-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

workflow_definitions:
  on_develop_commit: &on_develop_commit
    context: org-global
    filters:
      branches:
        only: main

workflows:
  develop:
    jobs:
      - build-develop:
          <<: *on_develop_commit
      - deploy-develop:
          <<: *on_develop_commit
          requires:
            - build-develop
